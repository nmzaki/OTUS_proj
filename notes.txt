Урок Базовые типы данны

print(type(x)) - показывает тип данных переменных Х
метод - действия с переменной
// - деление нацело
% - деление с остатком
num = 786
print(number//10%10)    >> 8
** - возведение в степень
Операции с float в сыром виде выдают не точные остатки, в помощь импорт decimal
help(тип данных) - вывод справки
методы строк (их много):
#конкатенация - сложение строк
replace
string1 = 'python is the best'
print(string1.replace('t', 'T'))    >>pyThon is The besT
lower - перевод в нижний регистр
upper - верхний регистр
capitalize - перевод первой буквы в верхний регистр
strip - удаляет пробелы и перходы в конце и начале строки, бывает r/lstrip (справа/слева)
split - разделение строки по заданному параметру - по дефолту разделение по пробелу
isdigit - проверка строки на цифру - булевый вывод
count - подсчет подстрок в строке string.count('x')
index - показывает индекс искомой подстроки
print(string1.index[4/'t', 3]) - после запятой вводится индекс с которого начинать считать
find - поиск подстроки, возвращает индекс
интерполяция - f-строка "f'{} блабла бла {} бла бла'"
number = 2323534645634534543
print(len(str(number)) - переводим число в строку и получаем количество символов

Булевые операции:
or "+"
and "*"
None - тип данных состоящий из одного значения - существенного ничего


Операторы ветвления

индент - отсутп, табуляция в питоне, равна 4 пробелам, отделение строк кода для условий ветвления
if <условие>:
    блаблабла
elif <условие2>:
    блабла
else:
    блаблабла

if - обязательно
elif - опционально
else - опционально
тернарный оператор:
print('some text' if age > 18 else 'another text')
